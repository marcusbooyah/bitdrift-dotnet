# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Visual Studio Files
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
*.psess
*.vsp
*.vspx
*.[Rr]e[Ss]harper
*.DotSettings.user
*.opensdf
*.sdf
*.jmconfig
*.suo
**/launchSettings.json
**/.vs/**
# *.pubxml

# Nuget Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
# !**/packages/repositories.config

# Random [.rnd] files are generated sometimes while building Docker
# images.  I'm not sure where they're coming from and deleting them
# in the image build scripts doesn't always seem to take.  We'll
# just ignore these.

*.rnd

# Common ASP.NET 5 Rules

bower_components/
node_modules/

################################################################################
# Custom rules added for this repository.
################################################################################

# Build/test artifacts: 
#
# NOTE: This assumes that we'll never want to commit folders named: [bin] or [obj]

**/bin/**
**/obj/**

/Build/**
/Build-Cache/**
*.mg.cs
GeneratedEntities.cs
GeneratedTypes.cs
GeneratedUxTypes.cs
/Test/**/TestResults/**
**/.build/**
**/.idea/**
**/node_modules/**
.DS_Store
/.vs
**/**/*.nupkg


#############################
### Other generated files ###
#############################

/**/*.gitignore/**
/UpgradeLog.htm
/ToolBin/nuget.config
**/generated/**
*.keystore
*.bkp
package-lock.json
.DS_Store
.idea/**
.vscode/launch.json
/app/publish
docs/bun.lockb
*.binlog


publish.sh


# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/